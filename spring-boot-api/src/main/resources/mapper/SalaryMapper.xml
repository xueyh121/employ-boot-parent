<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.four.dao.SalaryDao" >
  <resultMap id="BaseResultMap" type="com.four.model.Salary" >
    <id column="salaryid" property="salaryid" jdbcType="INTEGER" />
    <result column="salaryjibie" property="salaryjibie" jdbcType="INTEGER" />
    <result column="salarybase" property="salarybase" jdbcType="INTEGER" />
    <result column="salaryjn" property="salaryjn" jdbcType="INTEGER" />
    <result column="salsryyj" property="salsryyj" jdbcType="INTEGER" />
    <result column="salaryqq" property="salaryqq" jdbcType="INTEGER" />
    <result column="salarysum" property="salarysum" jdbcType="INTEGER" />
  </resultMap>
  
  
  
  <sql id="Base_Column_List" >
    salaryid, salaryjibie, salarybase, salaryjn, salsryyj, salaryqq, salarysum
  </sql>
  
  
  <select id="selectByPrimaryKey" resultType="com.four.model.Salary" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_salary
    where salaryid = #{salaryid,jdbcType=VARCHAR}
  </select>
  
    <select id="selectCount"  resultType="java.lang.Integer">
  	select count(*) from t_salary 
  	
  </select>
    
  <select id="salarylist" resultMap="BaseResultMap" >
 	 select * from t_salary 
 	  
 	 limit #{start},#{rows}
  </select> 
  
  
   <delete id="deleteByPrimaryKey"  >
    delete from t_salary
    where salaryid  in
     <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
  </delete>

 
  <insert id="addsalary" parameterType="com.four.model.Salary" >
    insert into t_salary (salaryid, salaryjibie, salarybase, 
      salaryjn, salsryyj, salaryqq, 
      salarysum)
    values (#{salaryid,jdbcType=INTEGER}, #{salaryjibie,jdbcType=INTEGER}, #{salarybase,jdbcType=INTEGER}, 
      #{salaryjn,jdbcType=INTEGER}, #{salsryyj,jdbcType=INTEGER}, #{salaryqq,jdbcType=INTEGER}, 
      #{salarysum,jdbcType=INTEGER})
  </insert>
  
  
 
  <update id="updateByPrimaryKeySelective" parameterType="com.four.model.Salary" >
    update t_salary
    <set >
      <if test="salaryjibie != null" >
        salaryjibie = #{salaryjibie,jdbcType=INTEGER},
      </if>
      <if test="salarybase != null" >
        salarybase = #{salarybase,jdbcType=INTEGER},
      </if>
      <if test="salaryjn != null" >
        salaryjn = #{salaryjn,jdbcType=INTEGER},
      </if>
      <if test="salsryyj != null" >
        salsryyj = #{salsryyj,jdbcType=INTEGER},
      </if>
      <if test="salaryqq != null" >
        salaryqq = #{salaryqq,jdbcType=INTEGER},
      </if>
      <if test="salarysum != null" >
        salarysum = #{salarysum,jdbcType=INTEGER},
      </if>
    </set>
    where salaryid = #{salaryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.four.model.Salary" >
    update t_salary
    set salaryjibie = #{salaryjibie,jdbcType=INTEGER},
      salarybase = #{salarybase,jdbcType=INTEGER},
      salaryjn = #{salaryjn,jdbcType=INTEGER},
      salsryyj = #{salsryyj,jdbcType=INTEGER},
      salaryqq = #{salaryqq,jdbcType=INTEGER},
      salarysum = #{salarysum,jdbcType=INTEGER}
    where salaryid = #{salaryid,jdbcType=INTEGER}
  </update>
  
  
  <!-- 查询每个部门平均薪资 -->
  
  <select id="queryEveSalary">
 	 select avg(t2.salarysum) from 
	t_department t1,t_salary t2,t_user t3,t_user_dept t4 
	where t1.deptid=t4.deptid and t3.userid=t4.userid and t2.salaryid=t3.userid
	GROUP BY t1.deptid
  </select>
  
  <!-- 查询每个部门总薪资 -->
  <select id="queryEveSumSalary">
 	 select sum(t2.salarysum) from 
		t_department t1,t_salary t2,t_user t3,t_user_dept t4 
		where t1.deptid=t4.deptid and t3.userid=t4.userid and t2.salaryid=t3.userid
		GROUP BY t4.deptid
  </select> 
  
</mapper>